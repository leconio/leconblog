# -*- coding: utf-8 -*-
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.8.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os


env = {
    'SECRET_KEY': os.environ.get('SECRET_KEY', 'I use vmaig'),
    'WEBSITE_TITLE': os.environ.get('WEBSITE_TITLE', u'Vmaig'),
    'WEBSITE_WELCOME': os.environ.get('WEBSITE_WELCOME', u'欢迎来到Vmaig'),
    'DATABAE_ENGINE': os.environ.get(
        'DATABAE_ENGINE',
        'django.db.backends.postgresql_psycopg2'
    ),
    'DATABASE_NAME': os.environ.get(
        'DATABASE_NAME',
        'db_vmaig'
    ),
    'DATABA_USER': os.environ.get(
        'DATABASE_USER',
        'vmaig'
    ),
    'DATABASE_PASSWORD': os.environ.get(
        'DATABASE_PASSWORD',
        'password'
    ),
    'DATABASE_HOST': os.environ.get(
        'DATABASE_HOST',
        'localhost'
    ),
    'DATABASE_PORT': int(os.environ.get(
        'DATABASE_PORT',
        5432
    )),
    'PAGE_NUM': int(os.environ.get('PAGE_NUM', 10)),
    'EMAIL_BACKEND': os.environ.get(
        'EMAIL_BACKEND',
        'django.core.mail.backends.smtp.EmailBackend'
    ),
    'EMAIL_HOST': os.environ.get('EMAIL_HOST', ''),
    'EMAIL_PORT': int(os.environ.get('EMAIL_PORT', 25)),
    'EMAIL_HOST_USER': os.environ.get('EMAIL_HOST_USER', ''),
    'EMAIL_HOST_PASSWORD': os.environ.get('EMAIL_HOST_PASSWORD', ''),
    'EMAIL_SUBJECT_PREFIX': os.environ.get('EMAIL_SUBJECT_PREFIX', u'vmaig'),
    'QINIU_ACCESS_KEY': os.environ.get('QINIU_ACCESS_KEY', ''),
    'QINIU_SECRET_KEY': os.environ.get('QINIU_SECRET_KEY', ''),
    'QINIU_BUCKET_NAME': os.environ.get('QINIU_BUCKET_NAME', ''),
    'QINIU_URL': os.environ.get('QINIU_URL', '')
}

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',

    'blog',
    'vmaig_auth',
    'vmaig_comments',
    'vmaig_system'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'vmaig_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates/")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vmaig_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env['DATABAE_ENGINE'],
        'NAME': env['DATABASE_NAME'],
        'USER': env['DATABA_USER'],
        'PASSWORD': env['DATABASE_PASSWORD'],
        'HOST': env['DATABASE_HOST'],
        'PORT': env['DATABASE_PORT']
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-cn'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = '/vmaig_blog/static/'

# 设置user model
AUTH_USER_MODEL = "vmaig_auth.VmaigUser"


# log配置
LOG_FILE = "./all.log"

LOGGING = {
        'version': 1,
        'disable_existing_loggers': True,

        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse'
                }
            },
        'formatters': {
            'simple': {
                'format': '[%(levelname)s] %(module)s : %(message)s'
                },
            'verbose': {
                'format':
                    '[%(asctime)s] [%(levelname)s] %(module)s : %(message)s'
                }
            },

        'handlers': {
            'null': {
                'level': 'DEBUG',
                'class': 'django.utils.log.NullHandler',
                },
            'console': {
                'level': 'INFO',
                'class': 'logging.StreamHandler',
                'formatter': 'verbose'
                },
            'file': {
                'level': 'INFO',
                'class': 'logging.FileHandler',
                'formatter': 'verbose',
                'filename': LOG_FILE,
                'mode': 'a',
                },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
                'filters': ['require_debug_false']
                }
            },
        'loggers': {
            '': {
                'handlers': ['file', 'console'],
                'level': 'INFO',
                'propagate': True,
                },
            'django': {
                'handlers': ['file', 'console'],
                'level': 'DEBUG',
                'propagate': True,
                },
            'django.request': {
                'handlers': ['mail_admins', 'console'],
                'level': 'ERROR',
                'propagate': True,
                },
            }
        }


# cache配置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'options': {
            'MAX_ENTRIES': 1024,
        }
    },
    'memcache': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        # 'LOCATION': 'unix:/home/billvsme/memcached.sock',
        'LOCATION': '127.0.0.1:11211',
        'options': {
            'MAX_ENTRIES': 1024,
        }
    },
}


# 分页配置
PAGE_NUM = env['PAGE_NUM']

# email配置
# 如果想要支持ssl (比如qq邮箱) 见 https://github.com/bancek/django-smtp-ssl
EMAIL_BACKEND = env['EMAIL_BACKEND']
EMAIL_HOST = env['EMAIL_HOST']
EMAIL_PORT = env['EMAIL_PORT']
EMAIL_HOST_USER = env['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = env['EMAIL_HOST_PASSWORD']
EMAIL_SUBJECT_PREFIX = env['EMAIL_SUBJECT_PREFIX']
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# 七牛配置
QINIU_ACCESS_KEY = env['QINIU_ACCESS_KEY']
QINIU_SECRET_KEY = env['QINIU_SECRET_KEY']
QINIU_BUCKET_NAME = env['QINIU_BUCKET_NAME']
QINIU_URL = env['QINIU_URL']

# 网站标题等内容配置
WEBSITE_TITLE = env['WEBSITE_TITLE']
WEBSITE_WELCOME = env['WEBSITE_WELCOME']
